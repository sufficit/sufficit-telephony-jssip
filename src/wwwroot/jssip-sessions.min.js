export function Reference(n){DotNetObjectReference=n}function i(n,t,i){(t==="OnPeerconnection"||t==="OnConnecting")&&(console.debug(`on ${t}, connection:`,n.connection),n.connection&&n.connection.addEventListener("addstream",u));i.toJSON=r;console.debug(`dispatchSessionEvent: ${t}`,n,i);DotNetObjectReference.invokeMethodAsync(t,n,i)}function r(){let i=["originator","cause"],t={};for(var n in this)if(i.includes(n)){let i=n;i.startsWith("_")&&(i=i.slice(1));t[i]=this[n]}return t}function u(n){const t=n.stream.getTracks();console.debug("onAddstream, event, tracks: ",n,t);t.forEach(f)}function f(i){let r;if(i.kind==="audio")r=document.getElementById(n),r||(r=document.createElement("audio"),r.id=n,document.body.appendChild(r));else if(i.kind==="video")r=document.getElementById(t),r||(r=document.createElement("video"),r.id=t,document.body.appendChild(r));else{console.error("unknown media stream");return}const u=new MediaStream([i]);"srcObject"in r?r.srcObject=u:r.src=URL.createObjectURL(u);r.play()}export var DotNetObjectReference;export const GetSession=function(n){const t=WebPhone._sessions[n];if(!t)throw new Error(`session id: ${n} not found`);return t};export const AttachEventHandlers=function(n,t){const r=GetSession(n);t.forEach(function(n){const t=`On${n.charAt(0).toUpperCase()}${n.slice(1)}`;r.on(n,n=>i(r,t,n))})},Monitor=async function(n,t){console.debug(`monitor session: ${n}`);const i=GetSession(n);i.on("newDTMF",n=>t.invokeMethodAsync("OnNewDTMF",n));i.on("newInfo",n=>t.invokeMethodAsync("OnNewInfo",n));i.on("hold",n=>t.invokeMethodAsync("OnHold",n));i.on("muted",n=>t.invokeMethodAsync("OnMuted",n));i.on("unhold",n=>t.invokeMethodAsync("OnUnhold",n));i.on("unmuted",n=>t.invokeMethodAsync("OnUnmuted",n));i.on("progress",n=>t.invokeMethodAsync("OnProgress",n));i.on("accepted",n=>t.invokeMethodAsync("OnAccepted",n));i.on("succeeded",n=>t.invokeMethodAsync("OnSucceeded",n));i.on("failed",n=>t.invokeMethodAsync("OnFailed",n));i.on("ended",n=>t.invokeMethodAsync("OnEnded",n));i.on("confirmed",n=>t.invokeMethodAsync("OnConfirmed",n));i.on("connecting",n=>t.invokeMethodAsync("OnConnecting",n));i.on("peerconnection",n=>t.invokeMethodAsync("OnPeerconnection",n))};const n="audio-player-remote",t="media-player-remote";export const JsSIPSessionActions=async function(n,t,i){console.debug(`action ${t} for session: ${n.id}`);const r=GetSession(n.id);switch(t){case"answer":r.answer(i);break;case"terminate":r.terminate();break;case"mute":r.mute(i);break;case"unmute":r.unmute(i);break;case"hold":r.hold();break;case"unhold":r.unhold();break;case"Papayas":console.log("Mangoes and papayas are $2.79 a pound.");break;default:console.log(`sorry, we are out of ${t}.`)}},Originate=async function(n,t){return console.debug("originate with args:",t),WebPhone.call(n,t)},Terminate=function(n){console.debug(`terminate session: ${n}`);const t=GetSession(n);t.terminate()},Answer=function(n,t){const i=GetSession(n);i.answer(t)};